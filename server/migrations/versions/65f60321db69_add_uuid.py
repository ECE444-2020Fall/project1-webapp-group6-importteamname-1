"""add uuid

Revision ID: 65f60321db69
Revises: 6bd169781446
Create Date: 2020-11-11 14:57:47.334280

"""
from alembic import op
import sqlalchemy as sa
import app
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '65f60321db69'
down_revision = '6bd169781446'
branch_labels = None
depends_on = None


def upgrade():
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('user_favourites')
    # op.create_table('recipe',
    # sa.Column('recipe_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    # sa.Column('recipe_name', sa.String(length=100), nullable=False),
    # sa.Column('image_url', sa.String(length=100), nullable=False),
    # sa.Column('cuisine', sa.String(length=50), nullable=False),
    # sa.Column('instructions', sa.String(length=5000000), nullable=False),
    # sa.Column('time_to_cook_in_minutes', sa.Integer(), nullable=False),
    # sa.Column('servings', sa.Integer(), nullable=False),
    # sa.Column('calories', sa.Float(), nullable=False),
    # sa.Column('protein', sa.Float(), nullable=False),
    # sa.Column('carbs', sa.Float(), nullable=False),
    # sa.Column('fat', sa.Float(), nullable=False),
    # sa.PrimaryKeyConstraint('recipe_id')
    # )
    # op.create_table('recipe_cart',
    # sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    # sa.Column('recipe_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    # sa.ForeignKeyConstraint(['recipe_id'], ['recipe.recipe_id'], ),
    # sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    # sa.PrimaryKeyConstraint('user_id', 'recipe_id')
    # )
    # op.create_table('recipe_ingredient',
    # sa.Column('recipe_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    # sa.Column('ingredient_name', sa.String(length=100), nullable=False),
    # sa.Column('amount', sa.Float(), nullable=False),
    # sa.Column('unit_of_measurement', sa.String(length=50), nullable=True),
    # sa.ForeignKeyConstraint(['recipe_id'], ['recipe.recipe_id'], ),
    # sa.PrimaryKeyConstraint('recipe_id', 'ingredient_name')
    # )
    # op.create_table('user_notes',
    # sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    # sa.Column('recipe_id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    # sa.Column('user_notes', sa.String(length=5000000), nullable=False),
    # sa.ForeignKeyConstraint(['recipe_id'], ['recipe.recipe_id'], ),
    # sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    # sa.PrimaryKeyConstraint('user_id', 'recipe_id')
    # )
    # op.create_foreign_key(None, 'user_favourites', 'recipe', ['recipe_id'], ['recipe_id'])
    # op.drop_index('user_rating_ibfk_1', table_name='user_rating')
    # op.create_foreign_key(None, 'user_rating', 'recipe', ['recipe_id'], ['recipe_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_rating', type_='foreignkey')
    op.create_index('user_rating_ibfk_1', 'user_rating', ['recipe_id'], unique=False)
    op.drop_constraint(None, 'user_favourites', type_='foreignkey')
    op.drop_table('user_notes')
    op.drop_table('recipe_ingredient')
    op.drop_table('recipe_cart')
    op.drop_table('recipe')
    # ### end Alembic commands ###
